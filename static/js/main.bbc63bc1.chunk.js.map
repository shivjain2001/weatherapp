{"version":3,"sources":["weatherInfo.js","App.js","reportWebVitals.js","index.js"],"names":["defaults","WeatherInfo","props","weatherIcon","weatherName","className","icon","color","size","animate","humidity","visiblity","windSpeed","feelsLike","maxTemp","App","state","latitude","longitude","temp","locationName","country","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","getWeather","a","fetch","api","json","data","console","log","setState","Math","round","main","name","sys","feels_like","visibility","wind","speed","temp_max","weather","this","then","position","coords","Fragment","format","ticking","date","href","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbc63bc1.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\nconst defaults = {\r\n    icon: 'CLEAR_DAY',\r\n    color: 'white',\r\n    size: 100,\r\n    animate: true\r\n};\r\n\r\nconst WeatherInfo = (props) => {\r\n    var weatherIcon;\r\n    switch(props.weatherName){\r\n    \r\n        case \"Rain\":\r\n            weatherIcon = 'RAIN';\r\n            break;\r\n        case \"Thunderstorm\":\r\n            weatherIcon = 'WIND';\r\n            break;\r\n        case \"Clouds\":\r\n            weatherIcon = 'CLOUDY';\r\n            break;\r\n        case \"Snow\":\r\n            weatherIcon = 'SNOW';\r\n            break;\r\n        case \"Haze\":\r\n            weatherIcon = 'PARTLY_CLOUDY_DAY';\r\n            break;\r\n        default:\r\n            weatherIcon = 'CLEAR_DAY'\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\" side-bg text-center\">\r\n                <ReactAnimatedWeather\r\n                    icon={weatherIcon}\r\n                    color={defaults.color}\r\n                    size={defaults.size}\r\n                    animate={defaults.animate}\r\n                />\r\n                <h2 className=\"text-white py-2\">{props.weatherName}</h2>\r\n                <div className=\"d-flex flex-wrap\">\r\n                    <div className=\"d-flex col-12 py-4\">\r\n                        <div className=\"text-white \"><strong>Humidity</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.humidity}%</div>\r\n                    </div>\r\n                    <div className=\"d-flex col-12 py-4\">\r\n                        <div className=\"text-white\"><strong>Visibility</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.visiblity} mi</div>\r\n                    </div>\r\n                    <div className=\"d-flex col-12 py-4\">\r\n                        <div className=\"text-white\"><strong>Wind Speed</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.windSpeed} Km/h</div>\r\n                    </div>\r\n                    <div className=\"d-flex col-12 py-4\">\r\n                        <div className=\"text-white\"><strong>Feels Like</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.feelsLike}°C</div>\r\n                    </div>\r\n                    <div className=\"d-flex col-12 py-4\">\r\n                        <div className=\"text-white\"><strong>Max Temp</strong></div>\r\n                        <div className=\"text-white ml-auto\">{props.maxTemp}°C</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherInfo\r\n","import React, { Component } from 'react'\nimport './App.css';\nimport Clock from 'react-live-clock';\nimport WeatherInfo from './weatherInfo';\n\n\nclass App extends React.Component {\n  state = {\n    latitude: null,\n    longitude: null,\n    temp: null,\n    locationName: null,\n    country: null,\n    humidity: null,\n    visiblity: null,\n    feelsLike: null,\n    windSpeed: null,\n    maxTemp: null,\n    weatherName: null\n  }\n  componentDidMount() {\n    if (navigator.geolocation) {\n      this.getPosition()\n        .then((position) => {\n          console.log(position.coords.latitude);\n          this.getWeather(position.coords.latitude, position.coords.longitude)\n        })\n    }\n  }\n  getPosition = () => {\n    return new Promise(function (resolve, reject) {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n  };\n  getWeather = async (latitude, longitude) => {\n    const api = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=2ade02ed2490047c3819d5dd5ce44cb2`\n    )\n\n    const data = await api.json()\n    console.log(data);\n    this.setState(\n      {\n        temp: Math.round(data.main.temp),\n        locationName: data.name,\n        country: data.sys.country,\n        humidity: data.main.humidity,\n        feelsLike: data.main.feels_like,\n        visiblity: data.visibility,\n        windSpeed: data.wind.speed,\n        maxTemp: data.main.temp_max,\n        weatherName: data.weather[0].main\n      }\n    )\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div>\n          <h1 className=\"text-center\">Sunshine Weather App</h1>\n          <p className=\"text-center\">Please allow location permission to see weather of your current location</p>\n        </div>\n        <div className=\" d-flex justify-content-center py-5 maindiv flexdirect\">\n          <div className=\"app-bg d-flex flex-child\">\n            <div className=\"col-12 topleft\">\n              <h2 className=\"text-white m-0\">{this.state.locationName}</h2>\n              <p className=\"text-white\">{this.state.country}</p>\n            </div>\n            <div className=\"col-12 d-flex bottomleftrow\">\n              <div>\n                <h2 className=\"text-white\">\n                  <Clock format={'HH:mm:ss'} ticking={true} /></h2>\n                <h6 className=\"text-white date\"><Clock format={'dddd, MMMM DD, YYYY'} date={''} /></h6>\n              </div>\n            </div>\n            <div className=\"bottomrightrow\">\n              <h1 className=\"text-white\">{this.state.temp}°C</h1>\n            </div>\n\n          </div>\n          <div className=\"flex-child aa\">\n            <WeatherInfo humidity={this.state.humidity} visiblity={this.state.visiblity} feelsLike={this.state.feelsLike} windSpeed={this.state.windSpeed} maxTemp={this.state.maxTemp} weatherName={this.state.weatherName} />\n          </div>\n        </div>\n        <footer>\n          <p className=\"text-center\">Created by <a href=\"https://www.linkedin.com/in/shivam-jain-b5102b17a/\">SHIVAM JAIN</a> | All rights reserved</p>\n\n        </footer>\n      </React.Fragment>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}